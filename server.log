{"time":"2024-12-11T11:34:27.4843851-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T11:37:06.205184-06:00","level":"ERROR","msg":"Failed to unmarshal json","error":"json: Unmarshal(non-pointer models.ValkeyRequest)","status":500}
{"time":"2024-12-11T11:38:09.7493607-06:00","level":"ERROR","msg":"Failed to unmarshal json","error":"json: Unmarshal(non-pointer models.ValkeyRequest)","status":500}
{"time":"2024-12-11T11:44:01.7424626-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T11:45:28.4946272-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T11:53:21.6453068-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T11:53:30.2785697-06:00","level":"ERROR","msg":"Failed to validate input","error":"Key: 'ValkeyRequest.ApplicationInfo.ErpAcronym' Error:Field validation for 'ErpAcronym' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.PathID' Error:Field validation for 'PathID' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.ContactInfo.Email' Error:Field validation for 'Email' failed on the 'required' tag","status":400}
{"time":"2024-12-11T11:57:34.2752137-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T11:57:44.1835638-06:00","level":"ERROR","msg":"Failed to validate input","error":"Key: 'ValkeyRequest.ApplicationInfo.ErpAcronym' Error:Field validation for 'ErpAcronym' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.PathID' Error:Field validation for 'PathID' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.ContactInfo.Email' Error:Field validation for 'Email' failed on the 'required' tag","status":400}
{"time":"2024-12-11T11:59:03.4958593-06:00","level":"ERROR","msg":"Failed to validate input","error":"Key: 'ValkeyRequest.ApplicationInfo.ErpAcronym' Error:Field validation for 'ErpAcronym' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.PathID' Error:Field validation for 'PathID' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.ContactInfo.Email' Error:Field validation for 'Email' failed on the 'required' tag","status":400}
{"time":"2024-12-11T12:00:21.0665667-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T12:00:25.2337957-06:00","level":"ERROR","msg":"Failed to validate input","error":"Key: 'ValkeyRequest.ApplicationInfo.ErpAcronym' Error:Field validation for 'ErpAcronym' failed on the 'len' tag\nKey: 'ValkeyRequest.ApplicationInfo.PathID' Error:Field validation for 'PathID' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.ContactInfo.Email' Error:Field validation for 'Email' failed on the 'required' tag","status":400}
{"time":"2024-12-11T12:01:39.1151198-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-11T12:01:45.2114883-06:00","level":"ERROR","msg":"Failed to validate input","error":"Key: 'ValkeyRequest.ApplicationInfo.PathID' Error:Field validation for 'PathID' failed on the 'required' tag\nKey: 'ValkeyRequest.ApplicationInfo.ContactInfo.Email' Error:Field validation for 'Email' failed on the 'required' tag","status":400}
{"time":"2024-12-12T11:29:18.8408664-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T11:31:39.2008927-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T11:31:45.5444284-06:00","level":"ERROR","msg":"Failed to open schema file","error":"open valkey_instance.json: The system cannot find the file specified.","status":500}
{"time":"2024-12-12T11:33:01.823415-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T11:33:09.3896474-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:34:32.5369412-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:34:44.4640299-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:34:59.8944668-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:38:08.4430876-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:38:54.7913269-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:44:52.4439455-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:46:12.145035-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:46:16.4891977-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:47:53.0979933-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T11:48:46.5955865-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:54:16.3058438-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T11:54:35.8186202-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T11:59:19.1376591-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T11:59:36.2816686-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T12:17:57.9986629-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T12:18:46.2273968-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T12:19:09.8159002-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","status":500}
{"time":"2024-12-12T12:29:10.3527734-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T12:29:25.0834067-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Valkey Instance Schema\",\r\n    \"description\": \"Schema for validating valkey instance creation API requests.\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z, ]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"] \r\n                \r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": { \r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\",\"security_groups\"]\r\n}\r\n","document":"{\r\n    \"application_info\": {\r\n        \"erp_acronym\": \"123456\",\r\n        \"path_id\": \"abcdefghij1234567890\",\r\n        \"contact_info\": {\r\n            \"email\": \"johndoe@example.com\",\r\n            \"slack\": \"slack-channel\",\r\n            \"owner\": \"John Doe\"\r\n        }\r\n    },\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName123\",\r\n        \"memory\": \"512GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tag1\": \"value1\",\r\n            \"tag2\": \"value2\"\r\n        }\r\n    },\r\n    \"security_groups\": {\r\n        \"cache_instance\": {\r\n            \"admin\": \"adminGroup\",\r\n            \"reader\": \"readerGroup\"\r\n        },\r\n        \"cache_data\": {\r\n            \"reader\": \"dataReaderGroup\",\r\n            \"contributer\": \"dataContributorGroup\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T12:40:43.5493226-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T12:42:04.8674333-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Valkey Instance Schema\",\r\n    \"description\": \"Schema for validating valkey instance creation API requests.\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z, ]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"{\r\n    \"application_info\": {\r\n        \"erp_acronym\": \"123456\",\r\n        \"path_id\": \"abcdefghij1234567890\",\r\n        \"contact_info\": {\r\n            \"email\": \"johndoe@example.com\",\r\n            \"slack\": \"slack-channel\",\r\n            \"owner\": \"John Doe\"\r\n        }\r\n    },\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName123\",\r\n        \"memory\": \"51GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tom1\": \"var1\",\r\n            \"tom2\": \"var2\"\r\n        }\r\n    },\r\n    \"security_groups\": {\r\n        \"cache_instance\": {\r\n            \"admin\": \"adminGroup\",\r\n            \"reader\": \"readerGroup\"\r\n        },\r\n        \"cache_data\": {\r\n            \"reader\": \"dataReaderGroup\",\r\n            \"contributer\": \"dataContributorGroup\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T13:16:08.7599028-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T13:16:14.1003489-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Valkey Instance Schema\",\r\n    \"description\": \"Schema for validating valkey instance creation API requests.\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z, ]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"{\r\n    \"application_info\": {\r\n        \"erp_acronym\": \"123456\",\r\n        \"path_id\": \"abcdefghij1234567890\",\r\n        \"contact_info\": {\r\n            \"email\": \"johndoe@example.com\",\r\n            \"slack\": \"slack-channel-1\",\r\n            \"owner\": \"John, Doe\"\r\n        }\r\n    },\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName-123\",\r\n        \"memory\": \"51GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tom1\": \"var 1\",\r\n            \"tom2\": \"var.2\"\r\n        }\r\n    },\r\n    \"security_groups\": {\r\n        \"cache_instance\": {\r\n            \"admin\": \"adminGroup\",\r\n            \"reader\": \"readerGroup\"\r\n        },\r\n        \"cache_data\": {\r\n            \"reader\": \"dataReaderGroup\",\r\n            \"contributer\": \"dataContributorGroup\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T13:40:18.313466-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T13:40:21.9044918-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":{},"document":{},"status":500}
{"time":"2024-12-12T13:48:55.4872489-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T13:49:03.2059933-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":{},"document":{},"status":500}
{"time":"2024-12-12T13:51:56.952055-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T13:51:56.9930998-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":{},"document":{},"status":500}
{"time":"2024-12-12T13:52:00.7584536-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":{},"document":{},"status":500}
{"time":"2024-12-12T16:10:33.6204885-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:10:43.413339-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Valkey Instance Schema\",\r\n    \"description\": \"Schema for validating valkey instance creation API requests.\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z, ]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"{\r\n    \"application_info\": {\r\n        \"erp_acronym\": \"123456\",\r\n        \"path_id\": \"abcdefghij1234567890\",\r\n        \"contact_info\": {\r\n            \"email\": \"johndoe@example.com\",\r\n            \"slack\": \"slack-channel-1\",\r\n            \"owner\": \"John, Doe\"\r\n        }\r\n    },\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName-123\",\r\n        \"memory\": \"51GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tom1\": \"var 1\",\r\n            \"tom2\": \"var.2\"\r\n        }\r\n    },\r\n    \"security_groups\": {\r\n        \"cache_instance\": {\r\n            \"admin\": \"adminGroup\",\r\n            \"reader\": \"readerGroup\"\r\n        },\r\n        \"cache_data\": {\r\n            \"reader\": \"dataReaderGroup\",\r\n            \"contributer\": \"dataContributorGroup\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T16:11:42.2272127-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:15:45.5413773-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:15:52.2105701-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Valkey Instance Schema\",\r\n    \"description\": \"Schema for validating valkey instance creation API requests.\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z, ]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"{\r\n    \"application_info\": {\r\n        \"erp_acronym\": \"123456\",\r\n        \"path_id\": \"abcdefghij1234567890\",\r\n        \"contact_info\": {\r\n            \"email\": \"johndoe@example.com\",\r\n            \"slack\": \"slack-channel-1\",\r\n            \"owner\": \"John, Doe\"\r\n        }\r\n    },\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName-123\",\r\n        \"memory\": \"51GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tom1\": \"var 1\",\r\n            \"tom2\": \"var.2\"\r\n        }\r\n    },\r\n    \"security_groups\": {\r\n        \"cache_instance\": {\r\n            \"admin\": \"adminGroup\",\r\n            \"reader\": \"readerGroup\"\r\n        },\r\n        \"cache_data\": {\r\n            \"reader\": \"dataReaderGroup\",\r\n            \"contributer\": \"dataContributorGroup\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T16:19:41.598585-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:19:47.9817948-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Valkey Instance Schema\",\r\n    \"description\": \"Schema for validating valkey instance creation API requests.\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z,\\\\s]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"{\r\n    \"application_info\": {\r\n        \"erp_acronym\": \"123456\",\r\n        \"path_id\": \"abcdefghij1234567890\",\r\n        \"contact_info\": {\r\n            \"email\": \"johndoe@example.com\",\r\n            \"slack\": \"slack-channel-1\",\r\n            \"owner\": \"John, Doe\"\r\n        }\r\n    },\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName-123\",\r\n        \"memory\": \"51GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tom1\": \"var 1\",\r\n            \"tom2\": \"var.2\"\r\n        }\r\n    },\r\n    \"security_groups\": {\r\n        \"cache_instance\": {\r\n            \"admin\": \"adminGroup\",\r\n            \"reader\": \"readerGroup\"\r\n        },\r\n        \"cache_data\": {\r\n            \"reader\": \"dataReaderGroup\",\r\n            \"contributer\": \"dataContributorGroup\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T16:25:06.468096-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:25:17.855651-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z,\\\\s]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[\\\\w\\\\s:,\\\\-\\\\.]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"","status":500}
{"time":"2024-12-12T16:28:42.8029603-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:29:11.0377908-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:32:09.830206-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:38:45.637669-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:39:01.9492703-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"application_info\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"erp_acronym\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^\\\\d{6}$\"\r\n                },\r\n                \"path_id\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[a-z0-9]{20}$\"\r\n                },\r\n                \"contact_info\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"email\": {\r\n                            \"type\": \"string\",\r\n                            \"format\": \"email\"\r\n                        },\r\n                        \"slack\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-]+$\"\r\n                        },\r\n                        \"owner\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[a-zA-Z,\\\\s]+$\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"email\", \"owner\"]\r\n                }\r\n            },\r\n            \"required\": [\"erp_acronym\", \"path_id\", \"contact_info\"]\r\n        },\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[A-Za-z0-9\\\\s:,.\\\\-]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"security_groups\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_instance\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"admin\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"admin\", \"reader\"]\r\n                },\r\n                \"cache_data\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"reader\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"contributer\": {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    \"required\": [\"reader\", \"contributer\"]\r\n                }\r\n            },\r\n            \"required\": [\"cache_instance\", \"cache_data\"]\r\n        }\r\n    },\r\n    \"required\": [\"application_info\", \"instance_spec\", \"security_groups\"]\r\n}","document":"","status":500}
{"time":"2024-12-12T16:44:05.5597014-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:48:06.4712877-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:48:19.2604701-06:00","level":"ERROR","msg":"Failed to validate schema","error":"pattern must be a valid regex","schema":"{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"instance_spec\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cache_name\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^(?!\\\\d)(?!.*--)[a-zA-Z0-9\\\\-]+$\",\r\n                    \"minLength\": 6,\r\n                    \"maxLength\": 63\r\n                },\r\n                \"memory\": {\r\n                    \"type\": \"string\",\r\n                    \"pattern\": \"^[0-9]+(MG|GB)$\"\r\n                },\r\n                \"cache_instance_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"cluster\", \"standalone\", \"serverless\"],\r\n                    \"default\": \"serverless\"\r\n                },\r\n                \"cloud_type\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"on_prem\", \"azure\"]\r\n                },\r\n                \"region\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"tier\": {\r\n                    \"type\": \"integer\",\r\n                    \"enum\": [1, 2, 3, 4]\r\n                },\r\n                \"tags\": {\r\n                    \"type\": \"object\",\r\n                    \"patternProperties\": {\r\n                        \"^[a-zA-Z0-9\\\\-_]+$\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[A-Za-z0-9\\\\s:,.\\\\-]+$\"\r\n                        }\r\n                    },\r\n                    \"additionalProperties\": false\r\n                }\r\n            },\r\n            \"required\": [\"cache_name\", \"memory\", \"cache_instance_type\", \"cloud_type\", \"region\", \"tier\"],\r\n            \"if\": {\r\n                \"properties\": {\r\n                    \"cloud_type\": { \"const\": \"azure\" }\r\n                }\r\n            },\r\n            \"then\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"East US\", \"West US\"]\r\n                    }\r\n                }\r\n            },\r\n            \"else\": {\r\n                \"properties\": {\r\n                    \"region\": {\r\n                        \"enum\": [\"Denver\", \"Fredricksburg\"]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"required\": [\"instance_spec\"]\r\n}","document":"{\r\n    \"instance_spec\": {\r\n        \"cache_name\": \"cacheName-123\",\r\n        \"memory\": \"51GB\",\r\n        \"cache_instance_type\": \"serverless\",\r\n        \"cloud_type\": \"azure\",\r\n        \"region\": \"East US\",\r\n        \"tier\": 2,\r\n        \"tags\": {\r\n            \"tom1\": \"var 1\",\r\n            \"tom2\": \"var.2\"\r\n        }\r\n    }\r\n}","status":500}
{"time":"2024-12-12T16:48:56.842288-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T16:57:41.8878901-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T17:05:36.404447-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T17:08:46.7378455-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T17:11:42.8956171-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T17:11:58.1367163-06:00","level":"ERROR","msg":"Validation error","field":"(root)","description":"application_info is required","status":400}
{"time":"2024-12-12T17:22:22.1165512-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T17:22:29.5438454-06:00","level":"INFO","msg":"Validation successful","status":200}
{"time":"2024-12-12T17:29:06.8041429-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T17:29:16.0560359-06:00","level":"INFO","msg":"Validation successful","status":200}
{"time":"2024-12-12T19:18:53.0404192-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T19:19:00.1805095-06:00","level":"INFO","msg":"Validation successful","status":200}
{"time":"2024-12-12T19:19:00.1810383-06:00","level":"ERROR","msg":"Failed to unmarshal JSON","error":"json: cannot unmarshal number into Go struct field InstanceSpec.instance_spec.tier of type string","status":400}
{"time":"2024-12-12T19:19:00.1816578-06:00","level":"INFO","msg":"http: superfluous response.WriteHeader call from github.com/A292460/CRUDAPI/apis.CreateValkeyInstance (api.go:60)"}
{"time":"2024-12-12T19:20:41.911242-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T19:20:46.5519624-06:00","level":"INFO","msg":"Validation successful","status":200}
{"time":"2024-12-12T19:20:46.5525007-06:00","level":"ERROR","msg":"Failed to unmarshal JSON","error":"json: cannot unmarshal object into Go struct field InstanceSpec.instance_spec.tags of type []string","status":400}
{"time":"2024-12-12T19:20:46.5525007-06:00","level":"INFO","msg":"http: superfluous response.WriteHeader call from github.com/A292460/CRUDAPI/apis.CreateValkeyInstance (api.go:60)"}
{"time":"2024-12-12T19:23:08.4324328-06:00","level":"INFO","msg":"Server started at port 8080"}
{"time":"2024-12-12T19:23:15.8460971-06:00","level":"INFO","msg":"Validation successful","status":200}
{"time":"2024-12-12T19:23:15.8460971-06:00","level":"INFO","msg":"Unmarshalling successful","valkeyInstance":{"application_info":{"erp_acronym":"123456","path_id":"abcdefghij1234567890","contact_info":{"email":"johndoe@example.com","slack":"slack-channel-1","owner":"John, Doe"}},"instance_spec":{"memory":"51GB","type":"","cloud_type":"azure","region":"East US","tier":2,"valkey_name":"","tags":{"tom1":"var 1","tom2":"var2"}},"security_groups":{"cache_instance":{"admin":"adminGroup","read":""},"cache_data":{"read":"","contributor":""}}}}
